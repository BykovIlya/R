clust.level <- as.integer(choose.clust())
fit <- kmeans(kdata, clust.level)
aggregate(kdata, by=list(fit$cluster), FUN=mean)
clust.out <- fit$cluster
kclust <- as.matrix(clust.out)
kclust.out <- cbind(kclust, data1)
write.table(kclust.out, file="kmeans_out.csv", sep=",")
# Display Principal Components plot of data with clusters identified
par(ask=TRUE)
clusplot(kdata, fit$cluster, shade=F, labels=2, lines=0, color=T, lty=4, main='Principal Components plot showing K-means clusters')
# Send output to files
kclust.out.p <- prop.table(as.matrix(kclust.out),1)*100
out <- capture.output(describe.by(kclust.out.p,kclust))
cat(out,file='Kmeans_out.txt', sep='\n', append=F)
pdf(file="kmeans_out.pdf")
xrange <- range(1:n.lev)
yrange <- range(log(rand.mat),log(wss))
plot(xrange,yrange, type='n', xlab='Cluster Solution', ylab='Log of Within Group SSE', main='Cluster Solutions against Log of SSE')
for (i in 1:250) lines(log(rand.mat[,i]),type='l',col='red')
lines(log(wss), type="b", col='blue')
legend('topright',c('Actual Data', '250 Random Runs'), col=c('blue', 'red'), lty=1)
yrange <- range(rand.mat,wss)
plot(xrange,yrange, type='n', xlab="Cluster Solution", ylab="Within Groups SSE", main="Cluster Solutions against SSE")
for (i in 1:250) lines(rand.mat[,i],type='l',col='red')
lines(1:n.lev, wss, type="b", col='blue')
legend('topright',c('Actual Data', '250 Random Runs'), col=c('blue', 'red'), lty=1)
xrange <- range(1:n.lev)
yrange <- range(log(r.sse.plus),log(r.sse.min))
plot(xrange,yrange, type='n',xlab='Cluster Solution', ylab='Log of SSE - Random SSE', main='Cluster Solustions against (Log of SSE - Random SSE)')
lines(log(r.sse.m), type="b", col='blue')
lines(log(r.sse.plus), type='l', col='red')
lines(log(r.sse.min), type='l', col='red')
legend('topright',c('SSE - random SSE', 'SD of SSE-random SSE'), col=c('blue', 'red'), lty=1)
xrange <- range(1:n.lev)
yrange <- range(r.sse.plus,r.sse.min)
plot(xrange,yrange, type='n',xlab='Cluster Solution', ylab='SSE - Random SSE', main='Cluster Solutions against (SSE - Random SSE)')
lines(r.sse.m, type="b", col='blue')
lines(r.sse.plus, type='l', col='red')
lines(r.sse.min, type='l', col='red')
legend('topright',c('SSE - random SSE', 'SD of SSE-random SSE'), col=c('blue', 'red'), lty=1)
clusplot(kdata, fit$cluster, shade=F, labels=2, lines=0, color=T, lty=4, main='Principal Components plot showing K-means clusters')
dev.off()
&cor
?cor
cor(bankruptcy)
View(bankruptcy)
bankruptcy$Банкрот <- NULL
View(bankruptcy)
cor(bankruptcy)
install.packages(Hmisc)
install.packages("Hmisc")
lines(r.sse.plus, type='l', col='red')
plot3d(x = Ликвидность.активов, y = Рентабельность.активов, z = Доходность.активов)
View(bankruptcy)
View(bankruptcy)
plot3d(x = bankruptcy$Ликвидность.активов, y = bankruptcy$Рентабельность.активов, z = bankruptcy$Доходность.активов)
plot3d(x = bankruptcy$Ликвидность.активов, y = bankruptcy$Рентабельность.активов, z = bankruptcy$Доходность.активов)
plot3d(x = bankruptcy$Ликвидность.активов, y = bankruptcy$Рентабельность.активов, z = bankruptcy$Оборачиваемость.активов)
library("plot3D")
View(bankruptcy_15)
View(bankruptcy_85)
bankruptcy <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE,  header=TRUE, sep=";")
bankruptcy <- as.data.frame(sapply(bankruptcy, gsub, pattern=",",replacement="."))
for (i in 2:6) bankruptcy[,i]  <- as.numeric(as.character(bankruptcy[,i]))
for (i in 2:6) bankruptcy[,i] <- 1/(1+(exp(-1*bankruptcy[,i])))
pairs(~ Ликвидность.активов + Рентабельность.активов + Доходность.активов + Автономность + Оборачиваемость.активов,data=bankruptcy,  main="Scatterplot Matrix")
bankruptcy$Банкрот <- NULL
bankruptcy[,1] <- NULL
bank <- (nrow(bankruptcy) -1)*sum(apply(bankruptcy_85, 2,var))
for (i in 2:20) bank[i]  <- sum(kmeans(bankruptcy, center = i)$withinss)
plot(1:20, bank, type="b")
bankruptcy$cluster <- factor(bank_kmeans$cluster)
bankruptcy <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE,  header=TRUE, sep=";")
bankruptcy <- as.data.frame(sapply(bankruptcy, gsub, pattern=",",replacement="."))
for (i in 2:6) bankruptcy[,i]  <- as.numeric(as.character(bankruptcy[,i]))
View(bankruptcy)
for (i in 2:6) bankruptcy[,i] <- 1/(1+(exp(-1*bankruptcy[,i])))
View(bankruptcy)
pairs(~ Ликвидность.активов + Рентабельность.активов + Доходность.активов + Автономность + Оборачиваемость.активов,data=bankruptcy,  main="Scatterplot Matrix")
plot3d(x = bankruptcy$Ликвидность.активов, y = bankruptcy$Рентабельность.активов, z = bankruptcy$Доходность.активов)
bankruptcy$Банкрот <- NULL
View(bankruptcy)
bank <- (nrow(bankruptcy) -1)*sum(apply(bankruptcy_85, 2,var))
for (i in 2:20) bank[i]  <- sum(kmeans(bankruptcy, center = i)$withinss)
for (i in 2:19) bank[i]  <- sum(kmeans(bankruptcy, center = i)$withinss)
for (i in 2:18) bank[i]  <- sum(kmeans(bankruptcy, center = i)$withinss)
plot(1:20, bank, type="b")
bank <- (nrow(bankruptcy) -1)*sum(apply(bankruptcy_85, 2,var))
for (i in 2:18) bank[i]  <- sum(kmeans(bankruptcy, center = i)$withinss)
for (i in 1:18) bank[i]  <- sum(kmeans(bankruptcy, center = i)$withinss)
plot(1:20, bank, type="b")
for (i in 1:18) bank[i]  <- sum(kmeans(bankruptcy, center = i)$withinss)
View(bankruptcy)
View(bankruptcy)
for (i in 2:6) bankruptcy[,i]  <- as.numeric(as.character(bankruptcy[,i]))
bankruptcy <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE,  header=TRUE, sep=";")
bankruptcy <- as.data.frame(sapply(bankruptcy, gsub, pattern=",",replacement="."))
for (i in 2:6) bankruptcy[,i]  <- as.numeric(as.character(bankruptcy[,i]))
View(bankruptcy)
for (i in 2:6) bankruptcy[,i] <- 1/(1+(exp(-1*bankruptcy[,i])))
View(bankruptcy)
bankruptcy2 <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE,  header=TRUE, sep=";")
bankruptcy[,1:6] <- NULL
View(bankruptcy2)
bankruptcy2[,1] <- NULL
View(bankruptcy2)
bankruptcy2[,1] <- NULL
bankruptcy2[,1] <- NULL
bankruptcy2[,1] <- NULL
bankruptcy2[,1] <- NULL
bankruptcy2 <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE,  header=TRUE, sep=";")
bankruptcy2[,1:6] <- NULL
bankruptcy2[,1:5] <- NULL
bankruptcy2 <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE,  header=TRUE, sep=";")
for (i in 1:5) bankruptcy2[,i]  <- NULL
View(bankruptcy2)
View(bankruptcy2)
bankruptcy2 <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE,  header=TRUE, sep=";")
for (i in 1:2) bankruptcy2[,i]  <- NULL
View(bankruptcy2)
View(bankruptcy2)
п
for (i in 1:4) bankruptcy2[,i]  <- NULL
View(bankruptcy2)
View(bankruptcy2)
bankruptcy2 <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE,  header=TRUE, sep=";")
bankruptcy2$Ликвидность.активов  <- NULL
bankruptcy2$Рентабельность.активов  <- NULL
bankruptcy2$Доходность.активов  <- NULL
bankruptcy2$Автономность  <- NULL
View(bankruptcy2)
View(bankruptcy2)
bankruptcy2$ID  <- NULL
bankruptcy2$Оборачиваемость.активов  <- NULL
View(bankruptcy2)
View(bankruptcy2)
View(bankruptcy)
View(bankruptcy)
bank <- (nrow(bankruptcy) -1)*sum(apply(bankruptcy_85, 2,var))
for (i in 1:18) bank[i]  <- sum(kmeans(bankruptcy, center = i)$withinss)
for (i in 2:20) bank[i]  <- sum(kmeans(bankruptcy, center = i)$withinss)
bank <- (nrow(bankruptcy) -1)*sum(apply(bankruptcy, 2,var))
bankruptcy <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE,  header=TRUE, sep=";")
bankruptcy2 <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE,  header=TRUE, sep=";")
bankruptcy <- as.data.frame(sapply(bankruptcy, gsub, pattern=",",replacement="."))
for (i in 2:6) bankruptcy[,i]  <- as.numeric(as.character(bankruptcy[,i]))
for (i in 2:6) bankruptcy[,i] <- 1/(1+(exp(-1*bankruptcy[,i])))
pairs(~ Ликвидность.активов + Рентабельность.активов + Доходность.активов + Автономность + Оборачиваемость.активов,data=bankruptcy,  main="Scatterplot Matrix")
bankruptcy$Банкрот <- NULL
bankruptcy[,1] <- NULL
bankruptcy2$ID  <- NULL
bankruptcy2$Ликвидность.активов  <- NULL
bankruptcy2$Рентабельность.активов  <- NULL
bankruptcy2$Доходность.активов  <- NULL
bankruptcy2$Автономность  <- NULL
bankruptcy2$Оборачиваемость.активов  <- NULL
bank <- (nrow(bankruptcy) -1)*sum(apply(bankruptcy, 2,var))
for (i in 2:20) bank[i]  <- sum(kmeans(bankruptcy, center = i)$withinss)
plot(2:20, bank, type="b")
bankruptcy <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE,  header=TRUE, sep=";")
bankruptcy2 <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE,  header=TRUE, sep=";")
bankruptcy <- as.data.frame(sapply(bankruptcy, gsub, pattern=",",replacement="."))
for (i in 2:6) bankruptcy[,i]  <- as.numeric(as.character(bankruptcy[,i]))
for (i in 2:6) bankruptcy[,i] <- 1/(1+(exp(-1*bankruptcy[,i])))
pairs(~ Ликвидность.активов + Рентабельность.активов + Доходность.активов + Автономность + Оборачиваемость.активов,data=bankruptcy,  main="Scatterplot Matrix")
setwd("~/GitHub/R/bank")
setwd("C:/Users/Екатерина/Documents/GitHub/R/bank")
setwd("C:/Users/Екатерина/Documents/GitHub/R/bank")
list.files()
bankruptcy <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE,  header=TRUE, sep=";")
bankruptcy2 <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE,  header=TRUE, sep=";")
View(bankruptcy)
bankruptcy <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE,  header=TRUE, sep=";")
bankruptcy2 <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE,  header=TRUE, sep=";")
bankruptcy <- as.data.frame(sapply(bankruptcy, gsub, pattern=",",replacement="."))
for (i in 2:6) bankruptcy[,i]  <- as.numeric(as.character(bankruptcy[,i]))
for (i in 2:6) bankruptcy[,i] <- 1/(1+(exp(-1*bankruptcy[,i])))
pairs(~ Ликвидность.активов + Рентабельность.активов + Доходность.активов + Автономность + Оборачиваемость.активов,data=bankruptcy,  main="Scatterplot Matrix")
bankruptcy$Банкрот <- NULL
bankruptcy2$ID  <- NULL
bankruptcy2$Ликвидность.активов  <- NULL
bankruptcy2$Рентабельность.активов  <- NULL
bankruptcy2$Доходность.активов  <- NULL
bankruptcy2$Автономность  <- NULL
bankruptcy2$Оборачиваемость.активов  <- NULL
bank <- (nrow(bankruptcy) -1)*sum(apply(bankruptcy, 2,var))
for (i in 2:20) bank[i]  <- sum(kmeans(bankruptcy, center = i)$withinss)
plot(2:20, bank, type="b")
bankruptcy <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE,  header=TRUE, sep=";")
bankruptcy2 <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE,  header=TRUE, sep=";")
bankruptcy <- as.data.frame(sapply(bankruptcy, gsub, pattern=",",replacement="."))
for (i in 2:6) bankruptcy[,i]  <- as.numeric(as.character(bankruptcy[,i]))
for (i in 2:6) bankruptcy[,i] <- 1/(1+(exp(-1*bankruptcy[,i])))
pairs(~ Ликвидность.активов + Рентабельность.активов + Доходность.активов + Автономность + Оборачиваемость.активов,data=bankruptcy,  main="Scatterplot Matrix")
bankruptcy$Банкрот <- NULL
bankruptcy2$ID  <- NULL
bankruptcy2$Ликвидность.активов  <- NULL
bankruptcy2$Рентабельность.активов  <- NULL
bankruptcy2$Доходность.активов  <- NULL
bankruptcy2$Автономность  <- NULL
bankruptcy2$Оборачиваемость.активов  <- NULL
bank <- (nrow(bankruptcy) -1)*sum(apply(bankruptcy, 2,var))
for (i in 2:20) bank[i]  <- sum(kmeans(bankruptcy, center = i)$withinss)
plot(2:20, bank, type="b")
Sys.setenv(LANG = "en")
bankruptcy <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE, header=TRUE, sep=";")
bankruptcy <- as.data.frame(sapply(bankruptcy, gsub, pattern=",",replacement="."))
bankruptcy_15 <- bankruptcy[sample(1:nrow(bankruptcy), 38, replace=FALSE),]
bankruptcy_85<-bankruptcy[!(bankruptcy$ID %in% bankruptcy_15$ID),]
rownames(bankruptcy_15)<-NULL
rownames(bankruptcy_85)<-NULL
View(bankruptcy_15)
bankruptcy <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE, fileEncoding = "UTF8", header=TRUE, sep=";")
View(bankruptcy)
View(bankruptcy)
bankruptcy <- as.data.frame(sapply(bankruptcy, gsub, pattern=",",replacement="."))
bankruptcy_15 <- bankruptcy[sample(1:nrow(bankruptcy), 38, replace=FALSE),]
bankruptcy_85<-bankruptcy[!(bankruptcy$ID %in% bankruptcy_15$ID),]
rownames(bankruptcy_15)<-NULL
rownames(bankruptcy_85)<-NULL
bankruptcy_15[,1] <- NULL
bankruptcy_85[,1] <- NULL
View(bankruptcy_15)
View(bankruptcy_15)
View(bankruptcy_15)
View(bankruptcy_15)
install.pascadges("ISLR")
install.packages("ISLR")
library("ISLR")
install.packages("tree")
library("tree")
Sys.setenv(LANG = "en")
attach(Carseats)
head(Carseats)
head(Carseats)
carseats
Carseats
Hight = ifeslse(Carseats$Sales >=8, "Yes", "No" )
Hight = ifelse(Carseats$Sales >=8, "Yes", "No" )
lenth(Hight)
length(Hight)
Hight <- ifelse(Carseats$Sales >=8, "Yes", "No" )
length(Hight)
Carseats <- data.frame(Carseats,Hight)
View(Carseats)
View(bankruptcy)
View(bankruptcy)
Bank <- ifelse(bankruptcy$Банкрот ==1, "Да", "Нет" )
length(Bank)
bankruptcy <- data.frame(bankruptcy,Bank)
View(bankruptcy)
bankruptcy <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE, fileEncoding = "UTF8", header=TRUE, sep=";")
bankruptcy <- as.data.frame(sapply(bankruptcy, gsub, pattern=",",replacement="."))
Bankruptcy <- ifelse(bankruptcy$Банкрот ==1, "Да", "Нет" )
length(Bankruptcy)
bankruptcy <- data.frame(bankruptcy, Bankruptcy)
View(bankruptcy)
View(bankruptcy)
bankruptcy$Банкрот <- NULL
View(bankruptcy)
View(bankruptcy)
Carseats$Sales <- NULL
View(Carseats)
View(Carseats)
set.seed(2)
train = sample(1:nrow(Carseats), nrow(Carseats)/3)
test = - train
training_data = Carseats[train,]
testing_data = Carseats[test,]
set.seed(2)
train = sample(1:nrow(Carseats), nrow(Carseats)/3)
test = - train
bankruptcy_training_data = Carseats[train,]
bankruptcy_testing_data = Carseats[test,]
bankruptcy_testing_Hight = Bankruptcy[test]
View(testing_data)
View(testing_data)
View(training_data)
View(training_data)
View(bankruptcy_testing_data)
View(bankruptcy_testing_data)
bankruptcy <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE, fileEncoding = "UTF8", header=TRUE, sep=";")
bankruptcy <- as.data.frame(sapply(bankruptcy, gsub, pattern=",",replacement="."))
Bankruptcy <- ifelse(bankruptcy$Банкрот ==1, "Да", "Нет" )
length(Bankruptcy)
bankruptcy <- data.frame(bankruptcy, Bankruptcy)
bankruptcy$Банкрот <- NULL
set.seed(2)
train = sample(1:nrow(Carseats), nrow(Carseats)/3)
test = - train
bankruptcy_training_data = Carseats[train,]
bankruptcy_testing_data = Carseats[test,]
bankruptcy_testing_Hight = Bankruptcy[test]
View(bankruptcy_testing_data)
View(bankruptcy_testing_data)
View(bankruptcy_testing_data)
bankruptcy <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE, fileEncoding = "UTF8", header=TRUE, sep=";")
bankruptcy <- as.data.frame(sapply(bankruptcy, gsub, pattern=",",replacement="."))
Bankruptcy <- ifelse(bankruptcy$Банкрот ==1, "Да", "Нет" )
length(Bankruptcy)
bankruptcy <- data.frame(bankruptcy, Bankruptcy)
bankruptcy$Банкрот <- NULL
set.seed(2)
train = sample(1:nrow(bankruptcy), nrow(bankruptcy)/3)
test = - train
bankruptcy_training_data = bankruptcy[train,]
bankruptcy_testing_data = bankruptcy[test,]
bankruptcy_testing_Hight = Bankruptcy[test]
attach(Carseats)
head(Carseats)
Hight <- ifelse(Carseats$Sales >=8, "Yes", "No" )
length(Hight)
Carseats <- data.frame(Carseats,Hight)
Carseats$Sales <- NULL
set.seed(2)
train = sample(1:nrow(Carseats), nrow(Carseats)/3)
test = - train
training_data = Carseats[train,]
testing_data = Carseats[test,]
testing_Hight = Hight[test]
bankruptcy <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE, fileEncoding = "UTF8", header=TRUE, sep=";")
bankruptcy <- as.data.frame(sapply(bankruptcy, gsub, pattern=",",replacement="."))
Bankruptcy <- ifelse(bankruptcy$Банкрот ==1, "Да", "Нет" )
length(Bankruptcy)
bankruptcy <- data.frame(bankruptcy, Bankruptcy)
bankruptcy$Банкрот <- NULL
set.seed(2)
train = sample(1:nrow(bankruptcy), nrow(bankruptcy)/3)
test = - train
bankruptcy_training_data = bankruptcy[train,]
bankruptcy_testing_Bankruptcy = Bankruptcy[test]
bankruptcy_testing_data = bankruptcy[test,]
#training
tree_model = tree(Hight ~ ., training_data)
plot(tree_model)
tree_model_bankruptcy = tree(Bankruptcy~.,bankruptcy_training_data)
View(bankruptcy)
View(bankruptcy)
range(bankruptcy$Ликвидность.активов)
for (i in 2:6) bankruptcy[,i]  <- as.numeric(as.character(bankruptcy[,i]))
View(bankruptcy)
View(bankruptcy)
range(bankruptcy$Ликвидность.активов)
bankruptcy <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE, fileEncoding = "UTF8", header=TRUE, sep=";")
bankruptcy <- as.data.frame(sapply(bankruptcy, gsub, pattern=",",replacement="."))
for (i in 2:6) bankruptcy[,i]  <- as.numeric(as.character(bankruptcy[,i]))
Bankruptcy <- ifelse(bankruptcy$Банкрот ==1, "Да", "Нет" )
length(Bankruptcy)
bankruptcy <- data.frame(bankruptcy, Bankruptcy)
bankruptcy$Банкрот <- NULL
set.seed(2)
train = sample(1:nrow(bankruptcy), nrow(bankruptcy)/3)
test = - train
bankruptcy_training_data = bankruptcy[train,]
bankruptcy_testing_data = bankruptcy[test,]
bankruptcy_testing_Bankruptcy = Bankruptcy[test]
#training
tree_model_bankruptcy = tree(Bankruptcy~.,bankruptcy_training_data)
plot(tree_model_bankruptcy)
range(bankruptcy$Ликвидность.активов)
range(bankruptcy$Ликвидность.активов)
range(bankruptcy$Рентабельность.активов)
range(bankruptcy$Доходность.активов)
range(bankruptcy$Автономность)
range(bankruptcy$Оборачиваемость.активов)
set.seed(2)
bankruptcy <- data.frame(bankruptcy,ifelse(ankruptcy$Ликвидность.активов >=0.5, "Высокая", "Низкая " ))
bankruptcy <- data.frame(bankruptcy,ifelse(bankruptcy$Ликвидность.активов >=0.5, "Высокая", "Низкая " ))
View(bankruptcy)
View(bankruptcy)
range(bankruptcy$Ликвидность.активов)
liquidity <- ifelse(bankruptcy$Ликвидность.активов >=0.5, "Высокая", "Низкая " )
View(bankruptcy)
View(bankruptcy)
View(bankruptcy)
View(bankruptcy)
range(bankruptcy$Ликвидность.активов)
liquidity <- ifelse(bankruptcy$Ликвидность.активов >=0.5, "Высокая", "Низкая " )
bankruptcy <- data.frame(bankruptcy,liquidity))
bankruptcy <- data.frame(bankruptcy,liquidity)
View(bankruptcy)
View(bankruptcy)
bankruptcy <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE, fileEncoding = "UTF8", header=TRUE, sep=";")
bankruptcy <- as.data.frame(sapply(bankruptcy, gsub, pattern=",",replacement="."))
for (i in 2:6) bankruptcy[,i]  <- as.numeric(as.character(bankruptcy[,i]))
Bankruptcy <- ifelse(bankruptcy$Банкрот ==1, "Да", "Нет" )
length(Bankruptcy)
bankruptcy <- data.frame(bankruptcy, Bankruptcy)
bankruptcy$Банкрот <- NULL
bankruptcy$Банкрот <- NULL
range(bankruptcy$Ликвидность.активов)
Ликвидность <- ifelse(bankruptcy$Ликвидность.активов >=0.5, "Высокая", "Низкая " )
bankruptcy <- data.frame(bankruptcy,Ликвидность)
View(bankruptcy)
View(bankruptcy)
bankruptcy <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE, fileEncoding = "UTF8", header=TRUE, sep=";")
bankruptcy <- as.data.frame(sapply(bankruptcy, gsub, pattern=",",replacement="."))
for (i in 2:6) bankruptcy[,i]  <- as.numeric(as.character(bankruptcy[,i]))
Банкротвро <- ifelse(bankruptcy$Банкрот ==1, "Да", "Нет" )
length(BБанкротво)
bankruptcy <- data.frame(bankruptcy, Банкротво)
range(bankruptcy$Ликвидность.активов)
bankruptcy$Банкрот <- NULL
Ликвидность <- ifelse(bankruptcy$Ликвидность.активов >=0.5, "Высокая", "Низкая " )
View(bankruptcy)
View(bankruptcy)
View(bankruptcy)
View(bankruptcy)
bankruptcy <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE, fileEncoding = "UTF8", header=TRUE, sep=";")
View(bankruptcy)
View(bankruptcy)
bankruptcy <- as.data.frame(sapply(bankruptcy, gsub, pattern=",",replacement="."))
for (i in 2:6) bankruptcy[,i]  <- as.numeric(as.character(bankruptcy[,i]))
Банкротвро <- ifelse(bankruptcy$Банкрот ==1, "Да", "Нет" )
length(BБанкротво)
length(Банкротво)
bankruptcy <- data.frame(bankruptcy, Банкротво)
bankruptcy$Банкрот <- NULL
View(bankruptcy)
View(bankruptcy)
for (i in 2:6) bankruptcy[,i]  <- as.numeric(as.character(bankruptcy[,i]))
Банкротство <- ifelse(bankruptcy$Банкрот == 1, "Да", "Нет" )
length(Банкротство)
bankruptcy <- data.frame(bankruptcy, Банкротство)
bankruptcy$Банкрот <- NULL
range(bankruptcy$Ликвидность.активов)
Ликвидность <- ifelse(bankruptcy$Ликвидность.активов >=0.5, "Высокая", "Низкая " )
bankruptcy <- data.frame(bankruptcy,Ликвидность)
View(bankruptcy)
View(bankruptcy)
View(bankruptcy_85)
View(bankruptcy)
View(bankruptcy)
bankruptcy <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE, fileEncoding = "UTF8", header=TRUE, sep=";")
bankruptcy <- as.data.frame(sapply(bankruptcy, gsub, pattern=",",replacement="."))
for (i in 2:6) bankruptcy[,i]  <- as.numeric(as.character(bankruptcy[,i]))
Банкротство <- ifelse(bankruptcy$Банкрот == 1, "Да", "Нет" )
bankruptcy <- data.frame(bankruptcy, Банкротство)
bankruptcy$Банкрот <- NULL
range(bankruptcy$Ликвидность.активов)
Ликвидность <- ifelse(bankruptcy$Ликвидность.активов >=0.5, "Высокая", "Низкая " )
View(bankruptcy)
View(bankruptcy)
bankruptcy <- data.frame(bankruptcy,Ликвидность)
View(bankruptcy)
View(bankruptcy)
range(bankruptcy$Рентабельность.активов)
range(bankruptcy$Рентабельность.активов)
if (bankruptcy$Рентабельность.активов <= -3.5) "Низкая"
Рентабельность <- if (bankruptcy$Рентабельность.активов <= -3.5) "Низкая" else if (bankruptcy$Рентабельность.активов <= -2) "Средняя" else if (bankruptcy$Рентабельность.активов >= -2) "Высокая"
Рентабельность <- function(type) { if (bankruptcy$Рентабельность.активов <= -3.5) "Низкая" else if (bankruptcy$Рентабельность.активов <= -2) "Средняя" else if (bankruptcy$Рентабельность.активов >= -2) "Высокая"}
range(bankruptcy$Рентабельность.активов)
Рентабельность <- function(type) { if (bankruptcy$Рентабельность.активов <= -3.5) "Низкая" else if (bankruptcy$Рентабельность.активов <= -2) "Средняя" else if (bankruptcy$Рентабельность.активов >= -2) "Высокая"}
bankruptcy <- data.frame(bankruptcy,Рентабельность)
Рентабельность <- function(bankruptcy$Рентабельность.активов) { if (bankruptcy$Рентабельность.активов <= -3.5) "Низкая" else if (bankruptcy$Рентабельность.активов <= -2) "Средняя" else if (bankruptcy$Рентабельность.активов >= -2) "Высокая"}
View(bankruptcy)
View(bankruptcy)
View(bankruptcy)
View(bankruptcy)
range(bankruptcy$Рентабельность.активов)
test_func <- function(rent) { if (rent <= -3.5) "Низкая" else if (rent <= -2) "Средняя" else if (rent >= -2) "Высокая"}
centre(bankruptcy$Рентабельность.активов)
test_func(bankruptcy$Рентабельность.активов)
range(bankruptcy$Рентабельность.активов)
test_func <- function(rent) { if (rent <= -3.5) "Низкая" else if (rent <= -2) "Средняя" else if (rent >= -2) "Высокая"}
lapply(bankruptcy$Рентабельность.активов, function())
lapply(bankruptcy$Рентабельность.активов, function()
lapply(bankruptcy$Рентабельность.активов, function())
lapply(bankruptcy$Рентабельность.активов, function(bankruptcy$Рентабельность.активов))
Sys.setenv(LANG = "en")
text(tree_model)
tree_model = tree(Hight ~ ., training_data)
plot(tree_model)
tree_pred = predict(tree_model, testing_data, type="class")
mean(tree_pred != teatin_Hight)
mean(tree_pred != testin_Hight)
mean(tree_pred != testing_Hight)
attach(Carseats)
head(Carseats)
Hight <- ifelse(Carseats$Sales >=8, "Yes", "No" )
length(Hight)
Carseats <- data.frame(Carseats,Hight)
Carseats$Sales <- NULL
set.seed(2)
train = sample(1:nrow(Carseats), nrow(Carseats)/3)
test = - train
training_data = Carseats[train,]
testing_data = Carseats[test,]
testing_Hight = Hight[test]
#training
tree_model = tree(Hight ~ ., training_data)
plot(tree_model)
tree_pred = predict(tree_model, testing_data, type="class")
mean(tree_pred != testing_Hight)
attach(Carseats)
head(Carseats)
Hight <- ifelse(Carseats$Sales >=8, "Yes", "No" )
length(Hight)
Carseats <- data.frame(Carseats,Hight)
Carseats$Sales <- NULL
set.seed(2)
train = sample(1:nrow(Carseats), nrow(Carseats)/3)
test = - train
training_data = Carseats[train,]
testing_data = Carseats[test,]
testing_Hight = Hight[test]
#training
tree_model = tree(Hight ~ ., training_data)
plot(tree_model)
tree_pred = predict(tree_model, testing_data, type="class")
mean(tree_pred != testing_Hight)
attach(Carseats)
