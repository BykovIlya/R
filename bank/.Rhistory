source('C:/Users/Екатерина/Desktop/install_all.R', echo=TRUE)
Sys.setenv(LANG = "en")
install.packages("ISLR")
library("ISLR")
install.packages("tree")
library("tree")
attach(Carseats)
head(Carseats)
Hight <- ifelse(Carseats$Sales >=8, "Yes", "No" )
length(Hight)
Carseats <- data.frame(Carseats, Hight)
Carseats$Sales <- NULL
set.seed(2)
train = sample(1:nrow(Carseats), nrow(Carseats)/3)
test = - train
training_data = Carseats[train,]
testing_data = Carseats[test,]
testing_Hight = Hight[test]
#training
tree_model = tree(Hight ~ ., training_data)
plot(tree_model)
text(tree_model, pretty=0)
tree_pred = predict(tree_model, testing_data, type="class")
mean(tree_pred != testing_Hight)
set.seed(3)
cv_tree - cv.tree(tree_model, FUN = prune.misclass)
cv_tree <- cv.tree(tree_model, FUN = prune.misclass)
plot(cv_tree$size,cv_tree$dev)
plot(cv_tree$size,cv_tree$dev, type = "b")
plot(cv_tree$size,cv_tree$dev, type = "b")
pruned_model <= prune.misclass(tree_model, best = 4) #взяли с графика 4
plot(pruned_model)
pruned_model <- prune.misclass(tree_model, best = 4) #взяли с графика 4
plot(pruned_model)
text(pruned_model, pretty=0)
plot(cv_tree$size,cv_tree$dev, type = "b")
pruned_model <- prune.misclass(tree_model, best = 9) #взяли с графика 9
plot(pruned_model)
text(pruned_model, pretty=0)
tree_pred = predict(pruned_model, testing_data, type="class")
mean(tree_pred != testing_Hight)
attach(Carseats)
library("ISLR")
library("tree")
attach(Carseats)
library("ISLR")
library("tree")
attach(Carseats)
head(Carseats)
Hight <- ifelse(Carseats$Sales >=8, "Yes", "No" )
length(Hight)
Carseats <- data.frame(Carseats, Hight)
Carseats$Sales <- NULL
set.seed(2)
train = sample(1:nrow(Carseats), nrow(Carseats)/3)
test = - train
training_data = Carseats[train,]
testing_data = Carseats[test,]
testing_Hight = Hight[test]
#training
tree_model = tree(Hight ~ ., training_data)
plot(tree_model)
text(tree_model, pretty=0)
tree_pred = predict(tree_model, testing_data, type="class")
mean(tree_pred != testing_Hight)
set.seed(3)
cv_tree <- cv.tree(tree_model, FUN = prune.misclass)
plot(cv_tree$size,cv_tree$dev, type = "b")
pruned_model <- prune.misclass(tree_model, best = 9) #взяли с графика 9
plot(pruned_model)
text(pruned_model, pretty=0)
tree_pred = predict(pruned_model, testing_data, type="class")
mean(tree_pred != testing_Hight)
set.seed(3)
cv_tree <- cv.tree(tree_model, FUN = prune.misclass)
plot(cv_tree$size,cv_tree$dev, type = "b")
pruned_model <- prune.misclass(tree_model, best = 4) #взяли с графика 9
plot(pruned_model)
text(pruned_model, pretty=0)
tree_pred = predict(pruned_model, testing_data, type="class")
mean(tree_pred != testing_Hight)
setwd("~/GitHub/R/bank")
setwd("C:/Users/Екатерина/Documents/GitHub/R/bank)
setwd("C:/Users/Екатерина/Documents/GitHub/R/bank")
Sys.setenv(LANG = "en")
#install.packages("ggplot2")
library(ggplot2)
#install.packages("MASS")
library("MASS")
#install.packages("epicalc", dependencies=TRUE)
library("epicalc")
#считываем данные из файла
bankruptcy <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE, fileEncoding = "UTF8", header=TRUE, sep=";")
bankruptcy <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE, fileEncoding = "UTF8", header=TRUE, sep=";")
View(bankruptcy)
bankruptcy <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE, header=TRUE, sep=";")
View(bankruptcy)
View(bankruptcy)
View(bankruptcy)
View(bankruptcy)
bankruptcy <- as.data.frame(sapply(bankruptcy, gsub, pattern=",",replacement="."))
for (i in 2:6) bankruptcy[,i]  <- as.numeric(as.character(bankruptcy[,i]))
#сбалансированно бьем выборку на тестовую и проверочную
ind1 <- subset(bankruptcy, bankruptcy[,"Банкрот"]==1, select=ID : Банкрот)
ind0 <- subset(bankruptcy, bankruptcy[,"Банкрот"]==0, select=ID : Банкрот)
sampind1 <- ind1[sample(1:nrow(ind1), 53, replace=FALSE),]
sampind0 <- ind0[sample(1:nrow(ind0), 158, replace=FALSE),]
training_data <- rbind(sampind0, sampind1)
testing_data <- bankruptcy[!(bankruptcy$ID %in% training_data$ID),]
rownames(training_data)<-NULL
rownames(testing_data)<-NULL
rm(ind0, ind1, sampind0, sampind1, i)
summary(bankruptcy$Ликвидность.активов)
boxplot(Ликвидность.активов ~ Банкрот , data = bankruptcy, xlab = "Ликвидность активов", ylab = "Банкрот", main = "Зависимость банкротства от ликвидности активов")
boxplot(Рентабельность.активов ~ Банкрот , data = bankruptcy, xlab = "Рентабельность активов", ylab = "Банкрот", main = "Зависимость банкротства от рентабельности активов")
range(bankruptcy$Рентабельность.активов)
boxplot(Доходность.активов ~ Банкрот , data = bankruptcy, xlab = "Доходность активов", ylab = "Банкрот", main = "Зависимость банкротства от доходности активов")
range(bankruptcy$Доходность.активов)
boxplot(Автономность ~ Банкрот , data = bankruptcy, xlab = "Автономность", ylab = "Банкрот", main = "Зависимость банкротства от автономности активов")
range(bankruptcy$Автономность)
boxplot(Оборачиваемость.активов ~ Банкрот , data = bankruptcy, xlab = "Оборачиваемость.активов", ylab = "Банкрот", main = "Зависимость банкротства от оборачиваемости активов")
range(bankruptcy$Оборачиваемость.активов)
#строим логистическую регрессию
glm.out = glm(Банкрот ~ Ликвидность.активов + Рентабельность.активов + Доходность.активов + Автономность + Оборачиваемость.активов, family = "binomial", data=training_data)
summary(glm.out)
logistic.display(glm(training_data$Банкрот ~ training_data$Ликвидность.активов + training_data$Рентабельность.активов + training_data$Доходность.активов + training_data$Автономность + training_data$Оборачиваемость.активов, family=binomial), decimal=1)
testing_data$predicted_value <- predict(glm.out, newdata = testing_data, type = "response")
logistic.display(glm(training_data$Банкрот ~ training_data$Ликвидность.активов + training_data$Рентабельность.активов + training_data$Доходность.активов + training_data$Автономность + training_data$Оборачиваемость.активов, family=binomial(logit)), decimal=1)
testing_data$predicted_value <- predict(glm.out, newdata = testing_data, type = "response")
glm.out = glm(Банкрот ~ Ликвидность.активов + Рентабельность.активов + Доходность.активов + Автономность + Оборачиваемость.активов, family=binomial(logit), data=training_data)
summary(glm.out)
plot(Ликвидность.активов ~ Банкрот, data=training_data)
plot(Ликвидность.активов ~ Банкрот, data=training_data)
anova(glm.out, test="Chisq")
plot(glm.out$fitted)
plot(glm.out$fitted)
abline(v=30.5,col="red")
abline(h=.3,col="green")
abline(h=.5,col="green")
text(15,.9,"seen = 0")
text(40,.9,"seen = 1")
glm.out = glm(Банкрот ~ Ликвидность.активов + Рентабельность.активов + Доходность.активов + Автономность + Оборачиваемость.активов, family=binomial, data=training_data)
summary(glm.out)
glm.out = glm(Банкрот ~ Ликвидность.активов + Рентабельность.активов + Доходность.активов + Автономность + Оборачиваемость.активов, family=binomial, data=training_data)
summary(glm.out)
anova(glm.out, test="Chisq")
glm.out = glm(Банкрот ~ Ликвидность.активов + Рентабельность.активов + Доходность.активов + Автономность + Оборачиваемость.активов, family=binomial, data=training_data)
summary(glm.out)
glm.out = glm(Банкрот ~ Ликвидность.активов + Доходность.активов, family=binomial, data=training_data)
summary(glm.out)
glm.out = step(glm(Банкрот ~ Ликвидность.активов + Рентабельность.активов + Доходность.активов + Автономность + Оборачиваемость.активов, family=binomial, data=training_data))
summary(glm.out)
library("outliers")
fix(banckruptcy)
summary(bankruptcy$Ликвидность.активов)
boxplot(Ликвидность.активов ~ Банкрот , data = bankruptcy, xlab = "Ликвидность активов", ylab = "Банкрот", main = "Зависимость банкротства от ликвидности активов")
summary(bankruptcy$Рентабельность.активов)
boxplot(Рентабельность.активов ~ Банкрот , data = bankruptcy, xlab = "Рентабельность активов", ylab = "Банкрот", main = "Зависимость банкротства от рентабельности активов")
т
summary(bankruptcy$Ликвидность.активов)
boxplot(Ликвидность.активов ~ Банкрот , data = bankruptcy, xlab = "Ликвидность активов", ylab = "Банкрот", main = "Зависимость банкротства от ликвидности активов")
summary(bankruptcy$Рентабельность.активов)
boxplot(Рентабельность.активов ~ Банкрот , data = bankruptcy, xlab = "Рентабельность активов", ylab = "Банкрот", main = "Зависимость банкротства от рентабельности активов")
summary(bankruptcy$Доходность.активов)
boxplot(Доходность.активов ~ Банкрот , data = bankruptcy, xlab = "Доходность активов", ylab = "Банкрот", main = "Зависимость банкротства от доходности активов")
summary(bankruptcy$Автономность)
boxplot(Автономность ~ Банкрот , data = bankruptcy, xlab = "Автономность", ylab = "Банкрот", main = "Зависимость банкротства от автономности активов")
summary(bankruptcy$Оборачиваемость.активов)
boxplot(Оборачиваемость.активов ~ Банкрот , data = bankruptcy, xlab = "Оборачиваемость.активов", ylab = "Банкрот", main = "Зависимость банкротства от оборачиваемости активов")
new_data <- subset(bankruptcy, Рентабельность.активов > -6, Доходность.активов > -6, Автономность < 40, Оборачиваемость.активов < 10)
View(bankruptcy)
View(bankruptcy)
new_data <- subset(bankruptcy, Рентабельность.активов > -6, Доходность.активов > -6, Оборачиваемость.активов < 10)
new_data <- subset( bankruptcy$Рентабельность.активов > -6, bankruptcy$Доходность.активов > -6, bankruptcy$Автономность < 40, bankruptcy$Оборачиваемость.активов < 10)
summary(new_data)
newdata <- bankruptcy[ whichbankruptcy$Рентабельность.активов > -6, bankruptcy$Доходность.активов > -6, bankruptcy$Автономность < 40, bankruptcy$Оборачиваемость.активов < 10), ]
newdata <- bankruptcy[ which(bankruptcy$Рентабельность.активов > -6, bankruptcy$Доходность.активов > -6, bankruptcy$Автономность < 40, bankruptcy$Оборачиваемость.активов < 10), ]
summary(bankruptcy$Оборачиваемость.активов)
newdata <- bankruptcy[ which(bankruptcy$Рентабельность.активов > -6, bankruptcy$Доходность.активов > -6, bankruptcy$Автономность < 40, bankruptcy$Оборачиваемость.активов < 15), ]
newdata <- bankruptcy[ which(bankruptcy$Рентабельность.активов > -6, bankruptcy$Доходность.активов > -6, bankruptcy$Автономность < 40), ]
summary(new_data)
View(bankruptcy)
View(bankruptcy)
summary(newdata)
summary(bankruptcy)
boxplot(Ликвидность.активов ~ Банкрот , data = bankruptcy, xlab = "Ликвидность активов", ylab = "Банкрот", main = "Зависимость банкротства от ликвидности активов")
boxplot(Рентабельность.активов ~ Банкрот , data = bankruptcy, xlab = "Рентабельность активов", ylab = "Банкрот", main = "Зависимость банкротства от рентабельности активов")
boxplot(Доходность.активов ~ Банкрот , data = bankruptcy, xlab = "Доходность активов", ylab = "Банкрот", main = "Зависимость банкротства от доходности активов")
boxplot(Автономность ~ Банкрот , data = bankruptcy, xlab = "Автономность", ylab = "Банкрот", main = "Зависимость банкротства от автономности активов")
boxplot(Оборачиваемость.активов ~ Банкрот , data = bankruptcy, xlab = "Оборачиваемость.активов", ylab = "Банкрот", main = "Зависимость банкротства от оборачиваемости активов")
newdata <- bankruptcy[ which(bankruptcy$Рентабельность.активов > -6, bankruptcy$Доходность.активов > -6, bankruptcy$Автономность < 40), ]
summary(newdata)
newdata <- bankruptcy[ which(bankruptcy$Рентабельность.активов > -6, bankruptcy$Доходность.активов > -6, bankruptcy$Автономность < 30), ]
summary(newdata)
newdata <- bankruptcy[ which(bankruptcy$Автономность < 30, bankruptcy$Рентабельность.активов > -6, bankruptcy$Доходность.активов > -6), ]
summary(newdata)
boxplot(Автономность ~ Банкрот , data = newdata, xlab = "Автономность", ylab = "Банкрот", main = "Зависимость банкротства от автономности активов")
newdata <- bankruptcy[ which(bankruptcy$Автономность < 40, bankruptcy$Рентабельность.активов > -6, bankruptcy$Доходность.активов > -6), ]
summary(newdata)
boxplot(Автономность ~ Банкрот , data = newdata, xlab = "Автономность", ylab = "Банкрот", main = "Зависимость банкротства от автономности активов")
newdata <- bankruptcy[ which(bankruptcy$Автономность < 15, bankruptcy$Рентабельность.активов > -6, bankruptcy$Доходность.активов > -6), ]
summary(newdata)
boxplot(Автономность ~ Банкрот , data = newdata, xlab = "Автономность", ylab = "Банкрот", main = "Зависимость банкротства от автономности активов")
newdata <- bankruptcy[ which(bankruptcy$Автономность < 40, bankruptcy$Рентабельность.активов > -6, bankruptcy$Доходность.активов > -6), ]
summary(newdata)
boxplot(Автономность ~ Банкрот , data = newdata, xlab = "Автономность", ylab = "Банкрот", main = "Зависимость банкротства от автономности активов")
newdata <- bankruptcy[ which(bankruptcy$Автономность < 30, bankruptcy$Рентабельность.активов > -6, bankruptcy$Доходность.активов > -6), ]
summary(newdata)
class <- read.csv(file="Эконометрика - оценки.csv",stringsAsFactors = FALSE, header=TRUE, sep=";")
View(class)
View(class)
class <- as.data.frame(sapply(class, gsub, pattern=",",replacement="."))
summary(class)
bankruptcy <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE, header=TRUE, sep=";")
bankruptcy <- as.data.frame(sapply(bankruptcy, gsub, pattern=",",replacement="."))
for (i in 2:6) bankruptcy[,i]  <- as.numeric(as.character(bankruptcy[,i]))
#Посмотрим на наши данные
summary(bankruptcy)
boxplot(Ликвидность.активов ~ Банкрот , data = bankruptcy, xlab = "Ликвидность активов", ylab = "Банкрот", main = "Зависимость банкротства от ликвидности активов")
boxplot(Рентабельность.активов ~ Банкрот , data = bankruptcy, xlab = "Рентабельность активов", ylab = "Банкрот", main = "Зависимость банкротства от рентабельности активов")
boxplot(Доходность.активов ~ Банкрот , data = bankruptcy, xlab = "Доходность активов", ylab = "Банкрот", main = "Зависимость банкротства от доходности активов")
boxplot(Автономность ~ Банкрот , data = bankruptcy, xlab = "Автономность", ylab = "Банкрот", main = "Зависимость банкротства от автономности активов")
boxplot(Оборачиваемость.активов ~ Банкрот , data = bankruptcy, xlab = "Оборачиваемость.активов", ylab = "Банкрот", main = "Зависимость банкротства от оборачиваемости активов")
newdata <- bankruptcy[ which(bankruptcy$Автономность < 30, bankruptcy$Рентабельность.активов > -6, bankruptcy$Доходность.активов > -6), ]
summary(newdata)
boxplot(Автономность ~ Банкрот , data = newdata, xlab = "Автономность", ylab = "Банкрот", main = "Зависимость банкротства от автономности активов")
#сбалансированно бьем выборку на тестовую и проверочную
ind1 <- subset(bankruptcy, bankruptcy[,"Банкрот"]==1, select=ID : Банкрот)
ind0 <- subset(bankruptcy, bankruptcy[,"Банкрот"]==0, select=ID : Банкрот)
sampind1 <- ind1[sample(1:nrow(ind1), 53, replace=FALSE),]
sampind0 <- ind0[sample(1:nrow(ind0), 158, replace=FALSE),]
boxplot(Автономность ~ Банкрот , data = newdata, xlab = "Автономность", ylab = "Банкрот", main = "Зависимость банкротства от автономности активов")
bankruptcy <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE, header=TRUE, sep=";")
bankruptcy <- as.data.frame(sapply(bankruptcy, gsub, pattern=",",replacement="."))
for (i in 2:6) bankruptcy[,i]  <- as.numeric(as.character(bankruptcy[,i]))
#Посмотрим на наши данные
summary(bankruptcy)
boxplot(Ликвидность.активов ~ Банкрот , data = bankruptcy, xlab = "Ликвидность активов", ylab = "Банкрот", main = "Зависимость банкротства от ликвидности активов")
boxplot(Рентабельность.активов ~ Банкрот , data = bankruptcy, xlab = "Рентабельность активов", ylab = "Банкрот", main = "Зависимость банкротства от рентабельности активов")
boxplot(Доходность.активов ~ Банкрот , data = bankruptcy, xlab = "Доходность активов", ylab = "Банкрот", main = "Зависимость банкротства от доходности активов")
boxplot(Автономность ~ Банкрот , data = bankruptcy, xlab = "Автономность", ylab = "Банкрот", main = "Зависимость банкротства от автономности активов")
boxplot(Оборачиваемость.активов ~ Банкрот , data = bankruptcy, xlab = "Оборачиваемость.активов", ylab = "Банкрот", main = "Зависимость банкротства от оборачиваемости активов")
newdata <- bankruptcy[ which(bankruptcy$Автономность < 30, bankruptcy$Рентабельность.активов > -6, bankruptcy$Доходность.активов > -6), ]
summary(newdata)
boxplot(Автономность ~ Банкрот , data = newdata, xlab = "Автономность", ylab = "Банкрот", main = "Зависимость банкротства от автономности активов")
boxplot(Ликвидность.активов ~ Банкрот , data = newdata, xlab = "Ликвидность активов", ylab = "Банкрот", main = "Зависимость банкротства от ликвидности активов")
boxplot(Рентабельность.активов ~ Банкрот , data = newdata, xlab = "Рентабельность активов", ylab = "Банкрот", main = "Зависимость банкротства от рентабельности активов")
boxplot(Рентабельность.активов ~ Банкрот , data = newdata, xlab = "Рентабельность активов", ylab = "Банкрот", main = "Зависимость банкротства от рентабельности активов")
boxplot(Доходность.активов ~ Банкрот , data = newdata, xlab = "Доходность активов", ylab = "Банкрот", main = "Зависимость банкротства от доходности активов")
boxplot(Оборачиваемость.активов ~ Банкрот , data = newdata, xlab = "Оборачиваемость.активов", ylab = "Банкрот", main = "Зависимость банкротства от оборачиваемости активов")
Sys.setenv(LANG = "en")
#install.packages("ggplot2")
library(ggplot2)
#install.packages("MASS")
library("MASS")
#install.packages("epicalc", dependencies=TRUE)
library("epicalc")
#install.packages("outliers", dependencies = TRUE)
library("outliers")
#считываем данные из файла
bankruptcy <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE, header=TRUE, sep=";")
bankruptcy <- as.data.frame(sapply(bankruptcy, gsub, pattern=",",replacement="."))
for (i in 2:6) bankruptcy[,i]  <- as.numeric(as.character(bankruptcy[,i]))
#Посмотрим на наши данные
summary(bankruptcy)
boxplot(Ликвидность.активов ~ Банкрот , data = bankruptcy, xlab = "Ликвидность активов", ylab = "Банкрот", main = "Зависимость банкротства от ликвидности активов")
boxplot(Рентабельность.активов ~ Банкрот , data = bankruptcy, xlab = "Рентабельность активов", ylab = "Банкрот", main = "Зависимость банкротства от рентабельности активов")
boxplot(Доходность.активов ~ Банкрот , data = bankruptcy, xlab = "Доходность активов", ylab = "Банкрот", main = "Зависимость банкротства от доходности активов")
boxplot(Автономность ~ Банкрот , data = bankruptcy, xlab = "Автономность", ylab = "Банкрот", main = "Зависимость банкротства от автономности активов")
boxplot(Оборачиваемость.активов ~ Банкрот , data = bankruptcy, xlab = "Оборачиваемость.активов", ylab = "Банкрот", main = "Зависимость банкротства от оборачиваемости активов")
newdata <- bankruptcy[ which(bankruptcy$Автономность < 30, bankruptcy$Рентабельность.активов > -6, bankruptcy$Доходность.активов > -6), ]
summary(newdata)
boxplot(Автономность ~ Банкрот , data = newdata, xlab = "Автономность", ylab = "Банкрот", main = "Зависимость банкротства от автономности активов")
boxplot(Рентабельность.активов ~ Банкрот , data = newdata, xlab = "Рентабельность активов", ylab = "Банкрот", main = "Зависимость банкротства от рентабельности активов")
boxplot(Доходность.активов ~ Банкрот , data = newdata, xlab = "Доходность активов", ylab = "Банкрот", main = "Зависимость банкротства от доходности активов")
boxplot(Оборачиваемость.активов ~ Банкрот , data = newdata, xlab = "Оборачиваемость.активов", ylab = "Банкрот", main = "Зависимость банкротства от оборачиваемости активов")
newdata <- bankruptcy[ which(bankruptcy$Автономность < 30, bankruptcy$Рентабельность.активов > -6, bankruptcy$Оборачиваемость.активов < 10, bankruptcy$Доходность.активов > -6), ]
boxplot(Доходность.активов ~ Банкрот , data = bankruptcy, xlab = "Доходность активов", ylab = "Банкрот", main = "Зависимость банкротства от доходности активов")
newdata <- bankruptcy[ which(bankruptcy$Доходность.активов > -6, bankruptcy$Автономность < 30, bankruptcy$Рентабельность.активов > -6, bankruptcy$Оборачиваемость.активов < 10, bankruptcy$Доходность.активов > -6), ]
newdata <- bankruptcy[ which(bankruptcy$Автономность < 30, bankruptcy$Рентабельность.активов > -6, bankruptcy$Доходность.активов > -6), ]
summary(newdata)
boxplot(Автономность ~ Банкрот , data = newdata, xlab = "Автономность", ylab = "Банкрот", main = "Зависимость банкротства от автономности активов")
boxplot(Рентабельность.активов ~ Банкрот , data = newdata, xlab = "Рентабельность активов", ylab = "Банкрот", main = "Зависимость банкротства от рентабельности активов")
newdata <- bankruptcy[ which(bankruptcy$Автономность < 30 || bankruptcy$Рентабельность.активов > -6 || bankruptcy$Доходность.активов > -6), ]
newdata <- bankruptcy[ which(bankruptcy$Доходность.активов > -6 || bankruptcy$Оборачиваемость.активов < 10), ]
View(newdata)
newdata <- bankruptcy[ which(bankruptcy$Автономность < 30 || bankruptcy$Рентабельность.активов > -6 || bankruptcy$Доходность.активов > -6), ]
newdata <- bankruptcy[ which(bankruptcy$Автономность < 30 | bankruptcy$Рентабельность.активов > -6 | bankruptcy$Доходность.активов > -6), ]
newdata <- bankruptcy[ which(bankruptcy$Доходность.активов > -6 || bankruptcy$Оборачиваемость.активов < 10), ]
newdata <- bankruptcy[ which(bankruptcy$Автономность < 30 ), ]
newdata <- bankruptcy[ which(bankruptcy$Рентабельность.активов > -6), ]
newdata <- bankruptcy[ which(bankruptcy$Доходность.активов > -6), ]
newdata <- bankruptcy[ which(bankruptcy$Автономность < 30 ), ]
newdata <- bankruptcy[ which(bankruptcy$Рентабельность.активов > -6), ]
newdata <- bankruptcy[ which(bankruptcy$Доходность.активов > -6), ]
newdata <- bankruptcy[ which(bankruptcy$Оборачиваемость.активов < 10), ]
newdata <- bankruptcy[ which(bankruptcy$Доходность.активов > -6), ]
newdata <- bankruptcy[ which(bankruptcy$Автономность < 30 ), ]
newdata <- newdata[ which(newdata$Рентабельность.активов > -6), ]
newdata <- newdata[ which(newdata$Доходность.активов > -6), ]
newdata <- newdata[ which(newdata$Оборачиваемость.активов < 10), ]
newdata <- newdata[ which(newdata$Доходность.активов > -6), ]
View(newdata)
summary(newdata)
boxplot(Автономность ~ Банкрот , data = newdata, xlab = "Автономность", ylab = "Банкрот", main = "Зависимость банкротства от автономности активов")
boxplot(Рентабельность.активов ~ Банкрот , data = newdata, xlab = "Рентабельность активов", ylab = "Банкрот", main = "Зависимость банкротства от рентабельности активов")
boxplot(Доходность.активов ~ Банкрот , data = newdata, xlab = "Доходность активов", ylab = "Банкрот", main = "Зависимость банкротства от доходности активов")
boxplot(Оборачиваемость.активов ~ Банкрот , data = newdata, xlab = "Оборачиваемость.активов", ylab = "Банкрот", main = "Зависимость банкротства от оборачиваемости активов")
#сбалансированно бьем выборку на тестовую и проверочную
bankruptcy <- bankruptcy[ which(bankruptcy$Автономность < 30 ), ]
summary(bankruptcy)
boxplot(Ликвидность.активов ~ Банкрот , data = bankruptcy, xlab = "Ликвидность активов", ylab = "Банкрот", main = "Зависимость банкротства от ликвидности активов")
boxplot(Рентабельность.активов ~ Банкрот , data = bankruptcy, xlab = "Рентабельность активов", ylab = "Банкрот", main = "Зависимость банкротства от рентабельности активов")
"
"
"
bankruptcy <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE, header=TRUE, sep=";")
bankruptcy <- as.data.frame(sapply(bankruptcy, gsub, pattern=",",replacement="."))
for (i in 2:6) bankruptcy[,i]  <- as.numeric(as.character(bankruptcy[,i]))
#Посмотрим на наши данные
summary(bankruptcy)
boxplot(Ликвидность.активов ~ Банкрот , data = bankruptcy, xlab = "Ликвидность активов", ylab = "Банкрот", main = "Зависимость банкротства от ликвидности активов")
boxplot(Рентабельность.активов ~ Банкрот , data = bankruptcy, xlab = "Рентабельность активов", ylab = "Банкрот", main = "Зависимость банкротства от рентабельности активов")
boxplot(Доходность.активов ~ Банкрот , data = bankruptcy, xlab = "Доходность активов", ylab = "Банкрот", main = "Зависимость банкротства от доходности активов")
boxplot(Автономность ~ Банкрот , data = bankruptcy, xlab = "Автономность", ylab = "Банкрот", main = "Зависимость банкротства от автономности активов")
boxplot(Оборачиваемость.активов ~ Банкрот , data = bankruptcy, xlab = "Оборачиваемость.активов", ylab = "Банкрот", main = "Зависимость банкротства от оборачиваемости активов")
bankruptcy <- read.csv(file="Предприятия-А.csv",stringsAsFactors = FALSE, header=TRUE, sep=";")
bankruptcy <- as.data.frame(sapply(bankruptcy, gsub, pattern=",",replacement="."))
for (i in 2:6) bankruptcy[,i]  <- as.numeric(as.character(bankruptcy[,i]))
#Посмотрим на наши данные
summary(bankruptcy)
boxplot(Ликвидность.активов ~ Банкрот , data = bankruptcy, xlab = "Ликвидность активов", ylab = "Банкрот", main = "Зависимость банкротства от ликвидности активов")
boxplot(Рентабельность.активов ~ Банкрот , data = bankruptcy, xlab = "Рентабельность активов", ylab = "Банкрот", main = "Зависимость банкротства от рентабельности активов")
boxplot(Доходность.активов ~ Банкрот , data = bankruptcy, xlab = "Доходность активов", ylab = "Банкрот", main = "Зависимость банкротства от доходности активов")
boxplot(Автономность ~ Банкрот , data = bankruptcy, xlab = "Автономность", ylab = "Банкрот", main = "Зависимость банкротства от автономности активов")
boxplot(Оборачиваемость.активов ~ Банкрот , data = bankruptcy, xlab = "Оборачиваемость.активов", ylab = "Банкрот", main = "Зависимость банкротства от оборачиваемости активов")
bankruptcy <- bankruptcy[ which(bankruptcy$Автономность < 30 ), ]
bankruptcy <- bankruptcy[ which(bankruptcy$Рентабельность.активов > -6), ]
bankruptcy <- bankruptcy[ which(bankruptcy$Доходность.активов > -6), ]
bankruptcy <- bankruptcy[ which(bankruptcy$Оборачиваемость.активов < 10), ]
bankruptcy <- bankruptcy[ which(bankruptcy$Доходность.активов > -6), ]
#Смотрим итоговую выборку
summary(bankruptcy)
boxplot(Ликвидность.активов ~ Банкрот , data = bankruptcy, xlab = "Ликвидность активов", ylab = "Банкрот", main = "Зависимость банкротства от ликвидности активов")
boxplot(Рентабельность.активов ~ Банкрот , data = bankruptcy, xlab = "Рентабельность активов", ylab = "Банкрот", main = "Зависимость банкротства от рентабельности активов")
boxplot(Доходность.активов ~ Банкрот , data = bankruptcy, xlab = "Доходность активов", ylab = "Банкрот", main = "Зависимость банкротства от доходности активов")
boxplot(Автономность ~ Банкрот , data = bankruptcy, xlab = "Автономность", ylab = "Банкрот", main = "Зависимость банкротства от автономности активов")
boxplot(Оборачиваемость.активов ~ Банкрот , data = bankruptcy, xlab = "Оборачиваемость.активов", ylab = "Банкрот", main = "Зависимость банкротства от оборачиваемости активов")
#сбалансированно бьем выборку на тестовую и проверочную
ind1 <- subset(bankruptcy, bankruptcy[,"Банкрот"]==1, select=ID : Банкрот)
ind0 <- subset(bankruptcy, bankruptcy[,"Банкрот"]==0, select=ID : Банкрот)
View(bankruptcy)
summary(bankruptcy)
boxplot(Ликвидность.активов ~ Банкрот , data = bankruptcy, xlab = "Ликвидность активов", ylab = "Банкрот", main = "Зависимость банкротства от ликвидности активов")
boxplot(Рентабельность.активов ~ Банкрот , data = bankruptcy, xlab = "Рентабельность активов", ylab = "Банкрот", main = "Зависимость банкротства от рентабельности активов")
boxplot(Рентабельность.активов ~ Банкрот , data = bankruptcy, xlab = "Рентабельность активов", ylab = "Банкрот", main = "Зависимость банкротства от рентабельности активов")
boxplot(Ликвидность.активов ~ Банкрот , data = bankruptcy, xlab = "Ликвидность активов", ylab = "Банкрот", main = "Зависимость банкротства от ликвидности активов")
boxplot(Рентабельность.активов ~ Банкрот , data = bankruptcy, xlab = "Рентабельность активов", ylab = "Банкрот", main = "Зависимость банкротства от рентабельности активов")
boxplot(Доходность.активов ~ Банкрот , data = bankruptcy, xlab = "Доходность активов", ylab = "Банкрот", main = "Зависимость банкротства от доходности активов")
boxplot(Автономность ~ Банкрот , data = bankruptcy, xlab = "Автономность", ylab = "Банкрот", main = "Зависимость банкротства от автономности активов")
boxplot(Оборачиваемость.активов ~ Банкрот , data = bankruptcy, xlab = "Оборачиваемость.активов", ylab = "Банкрот", main = "Зависимость банкротства от оборачиваемости активов")
#сбалансированно бьем выборку на тестовую и проверочную
ind1 <- subset(bankruptcy, bankruptcy[,"Банкрот"]==1, select=ID : Банкрот)
ind0 <- subset(bankruptcy, bankruptcy[,"Банкрот"]==0, select=ID : Банкрот)
sampind1 <- ind1[sample(1:nrow(ind1), 53, replace=FALSE),]
sampind0 <- ind0[sample(1:nrow(ind0), 158, replace=FALSE),]
training_data <- rbind(sampind0, sampind1)
testing_data <- bankruptcy[!(bankruptcy$ID %in% training_data$ID),]
rownames(training_data)<-NULL
rownames(testing_data)<-NULL
rm(ind0, ind1, sampind0, sampind1, i)
#строим логистическую регрессию
glm.out = step(glm(Банкрот ~ Ликвидность.активов + Рентабельность.активов + Доходность.активов + Автономность + Оборачиваемость.активов, family=binomial, data=training_data))
summary(glm.out)
anova(glm.out, test="Chisq")
plot(glm.out$fitted)
abline(v=30.5,col="red")
abline(h=.3,col="green")
abline(h=.5,col="green")
text(15,.9,"seen = 0")
text(40,.9,"seen = 1")
plot(Ликвидность.активов ~ Банкрот, data=training_data)
testing_data$predicted_value <- predict(glm.out, newdata = testing_data, type = "response")
View(testing_data)
View(testing_data)
summary(bankruptcy)
boxplot(Рентабельность.активов ~ Банкрот , data = bankruptcy, xlab = "Рентабельность активов", ylab = "Банкрот", main = "Зависимость банкротства от рентабельности активов")
boxplot(Доходность.активов ~ Банкрот , data = bankruptcy, xlab = "Доходность активов", ylab = "Банкрот", main = "Зависимость банкротства от доходности активов")
boxplot(Автономность ~ Банкрот , data = bankruptcy, xlab = "Автономность", ylab = "Банкрот", main = "Зависимость банкротства от автономности активов")
boxplot(Оборачиваемость.активов ~ Банкрот , data = bankruptcy, xlab = "Оборачиваемость.активов", ylab = "Банкрот", main = "Зависимость банкротства от оборачиваемости активов")
#сбалансированно бьем выборку на тестовую и проверочную
ind1 <- subset(bankruptcy, bankruptcy[,"Банкрот"]==1, select=ID : Банкрот)
ind0 <- subset(bankruptcy, bankruptcy[,"Банкрот"]==0, select=ID : Банкрот)
sampind1 <- ind1[sample(1:nrow(ind1), 53, replace=FALSE),]
sampind0 <- ind0[sample(1:nrow(ind0), 158, replace=FALSE),]
training_data <- rbind(sampind0, sampind1)
testing_data <- bankruptcy[!(bankruptcy$ID %in% training_data$ID),]
rownames(training_data)<-NULL
rownames(testing_data)<-NULL
rm(ind0, ind1, sampind0, sampind1, i)
#строим логистическую регрессию
glm.out = step(glm(Банкрот ~ Ликвидность.активов + Рентабельность.активов + Доходность.активов + Автономность + Оборачиваемость.активов, family=binomial, data=training_data))
summary(glm.out)
anova(glm.out, test="Chisq")
anova(glm.out, test="Chisq")
View(testing_data)
View(testing_data)
View(testing_data)
View(testing_data)
plot(Ликвидность.активов ~ Банкрот, data=training_data)
