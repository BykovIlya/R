?rnorm
help.search("rmorm")
args("rnorm")
install.packages("swirl")
library("swirl")
swirl()
5+7
x <- 5 + 7
x
y <- x -3
y
z <- c(1.1, 9, 3.14)
?c
z
(z, 555, z)
(z,555,z)
(z 555 z)
(z, 555, z)
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z -1)
my_sqrt
my_div <- (z/my_sqrt)
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4)
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
(z * 2 + 1000)
(z * 2 + 1000)
info()
(z * 2 + 1000)
main()
z * 2 + 1000
my_div
swirl()
1:20
pi:10
15:1
':'
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each
| = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
c("My", "name", "is")
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Kate")
my_name]
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), , sep = " ")
paste(1:3, c("X", "Y", "Z"), , sep = " ")
paste(1:3, c("X", "Y", "Z"), , sep = "")
paste(c(1:3), c("X", "Y", "Z"), , sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
y
z <- rep(NA, 1000)
y_data <- sample(c(y, z), 100)
my_data <- sample(c(y, z), 100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf/Inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
c(3,5,7)
c(3, 5, 7)
[c(3, 5, 7)]
v <- c(3, 5, 7)
m <- c(3, 5, 7)
a <- c(3, 5, 7)
[f]
[a]
c[3, 5, 7]
c
x[c(3, 5, 7)]
x (i.e. x[0])
i.e. x[0]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- c(1:20)
my_vector <- 1:3
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
v
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
View(my_matrix)
View(my_matrix)
View(my_matrix)
View(my_vector)
View(my_vector)
my_matrix2 <- matrix(1:20, (dim(my_vector) <- c(4, 5))
setwd("~/Documents/GIT/R/trading")
library("quantmod")
#install.packages("zoo", dependencies=TRUE)
library("zoo")
#install.packages("TTR", dependencies=TRUE)
library("TTR")
#install.packages("png", dependencies=TRUE)
library("png")
#install.packages("checkpoint", dependencies=TRUE)
#library("checkpoint")
#checkpoint ("2015-04-05", R.version = "3.1.2", checkpointLocation = "C:/Users/Екатерина/Documents/GitHub/R/trading")
#Считываем данные из файла, приведем их к виду, пригодному для анализа в R:
Quotes1 <- read.csv(file="HistoricalQuotes.csv",stringsAsFactors = FALSE, header=TRUE, sep=",", dec= ".")
for (i in 2:6) Quotes1[,i]  <- as.numeric(as.character(Quotes1[,i]))
#Инвертируем значения:
Quotes <- subset(Quotes1, select = c("date", "close", "volume",  "open", "high",  "low"));
for (i in 1:nrow(Quotes1)) Quotes[i,]  <- Quotes1[nrow(Quotes1) - i + 1,]
Quotes[,1]  <- as.Date(Quotes[,1])
Quotes = Quotes[-1,]
rownames(Quotes)<-NULL
rm(Quotes1)
График сопоставления скользящих средних между собой:
for (i in 10:nrow(Quotes)) Quotes[i,7] <- mean(Quotes[(i-9):i,2])
plot(Quotes[1:300,2], type="l", lwd=2, col="red", xlab="Наблюдения", ylab="Цена закрытия", main="Акции компании ORACLE", ylim=c(10,16) )
lines(Quotes[1:300,7], type="l", lwd=2, col="blue", xlab="Наблюдения", ylab="Цена закрытия", main="Акции компании ORACLE" )
colnames(Quotes)[7] <- "SMAS"
for (i in 50:nrow(Quotes)) Quotes[i,8] <- mean(Quotes[(i-49):i,2])
lines(Quotes[1:300,8], type="l", lwd=2, col="orange", xlab="Наблюдения", ylab="Цена закрытия", main="Акции компании ORACLE" )
colnames(Quotes)[8] <- "SMAL"
legend("topleft", c("SMA-S", "SMA-L"), col=c("blue", "orange"), lwd=4)
#График сопоставления экспоненциальных скользящих средних между собой:
Quotes[,9] <- EMA(Quotes[,2], n=10, ratio = 1-((10-1)/(10+1)))
plot(Quotes[1:300,2], type="l", lwd=2, col="red", xlab="Наблюдения", ylab="Цена закрытия", main="Акции компании ORACLE", ylim=c(10,16) )
lines(Quotes[1:300,9], type="l", lwd=2, col="blue", xlab="Наблюдения", ylab="Цена закрытия", main="Акции компании ORACLE" )
colnames(Quotes)[9] <- "EMAS"
Quotes[,10] <- EMA(Quotes[,2], n=50, ratio = 1 - ((50-1)/(50+1)))
lines(Quotes[1:300,10], type="l", lwd=2, col="orange", xlab="Наблюдения", ylab="Цена закрытия", main="Акции компании ORACLE" )
colnames(Quotes)[10] <- "EMAL"
legend("topleft", c("EMA-S", "EMA-L"), col=c("blue", "orange"), lwd=4)
WMA <- function(L, data){
wma_w <- function(L,n)
{
if((n >= 0)&(n < L)) (2/(L*(L+1)))*(L-n)
else 0
}
x <- vector(mode="numeric", length=NROW(data))
for (i in 1:NROW(data)){
if (i<L) x[i] <- NA
else {
value = 0
counter = 0
for (j in i:(i-L+1)){
value = value + data[j] * wma_w(L,counter)
counter = counter + 1
}
x[i]<-value
}
}
return(x)
}
Quotes[,11] <- WMA(10, Quotes[, 2])
Quotes[,12] <- WMA(50, Quotes[, 2])
#Графики для EMA-S и EMA-L:
drawSquares <- function(data, start, plot=FALSE){
if(plot){
plot(Quotes[,2], xaxt='n',type="l", lwd=2, col= rgb(0,0,0,alpha = 0.4), xlab="", ylab="Цена закрытия", main="Акции компании ORACLE")
lines(Quotes[,9], type="l", lwd=2, col="red", xlab="Наблюдения", ylab="Цена закрытия", main="Акции компании ORACLE" )
lines(Quotes[,10], type="l", lwd=2, col="orange", xlab="Наблюдения", ylab="Цена закрытия", main="Акции компании ORACLE" )
}
vec <- vector()
notFirst = FALSE;
init = FALSE;
ix = 50;
miny = 0;
maxy = 50;
if (data[start,1] > data[start,2]){
init = TRUE;
}
for (i in start:NROW(data)){
if (init == TRUE){
if (data[i,1]<data[i,2]){
init=FALSE;
vec <- c(vec,i)
if (notFirst & plot)   rect(ix,miny,i,maxy, col=rgb(0.3,0.9,0.5,alpha=0.3));
if (!notFirst) notFirst = TRUE;
ix = i;
}
}else{
if (data[i,1]>data[i,2]){
init=TRUE;
vec <- c(vec,i)
if (notFirst & plot) rect(ix,miny,i,maxy, col=rgb(0.6,0.2,0.7,alpha=0.3));
if (!notFirst) notFirst = TRUE;
ix = i;
}
}
}
return(vec)
}
vec <- drawSquares(Quotes[,9:10], 50, plot=TRUE)
axis(side=1, at=vec,labels=Quotes[vec,1], las=2,cex.axis = 0.6,srt = 60)
#Графики для EMA-S и EMA-L:
drawSquares <- function(data, start, plot=FALSE){
if(plot){
plot(Quotes[,2], xaxt='n',type="l", lwd=2, col= rgb(0,0,0,alpha = 0.4), xlab="", ylab="Цена закрытия", main="Акции компании ORACLE")
lines(Quotes[,9], type="l", lwd=2, col="red", xlab="Наблюдения", ylab="Цена закрытия", main="Акции компании ORACLE" )
lines(Quotes[,10], type="l", lwd=2, col="orange", xlab="Наблюдения", ylab="Цена закрытия", main="Акции компании ORACLE" )
}
vec <- vector()
notFirst = FALSE;
init = FALSE;
ix = 50;
miny = 0;
maxy = 50;
if (data[start,1] > data[start,2]){
init = TRUE;
}
for (i in start:NROW(data)){
if (init == TRUE){
if (data[i,1]<data[i,2]){
init=FALSE;
vec <- c(vec,i)
if (notFirst & plot)   rect(ix,miny,i,maxy, col=rgb(0.3,0.9,0.5,alpha=0.3));
if (!notFirst) notFirst = TRUE;
ix = i;
}
}else{
if (data[i,1]>data[i,2]){
init=TRUE;
vec <- c(vec,i)
if (notFirst & plot) rect(ix,miny,i,maxy, col=rgb(0.6,0.2,0.7,alpha=0.3));
if (!notFirst) notFirst = TRUE;
ix = i;
}
}
}
return(vec)
}
vec <- drawSquares(Quotes[,9:10], 50, plot=TRUE)
axis(side=1, at=vec,labels=Quotes[vec,1], las=2,cex.axis = 0.6,srt = 60)
#imitation game
Quotes$budget <- Quotes[NROW(Quotes),2]*500
Quotes$papers <- 0
initx <- 50
intersections <- drawSquares(Quotes[,9:10], initx, plot = TRUE)
shallBuy <- FALSE
if (Quotes[initx,9] < Quotes[initx,10]) shallBuy <-TRUE
for (i in 1:NROW(intersections))
{
if (shallBuy){
index <- intersections[i]
price <- Quotes[index,2]
budget <-  Quotes[index,13]
papers <-  budget  %/% price
budget <- budget %% price
Quotes[(index:(NROW(Quotes))),14]<-papers
Quotes[(index:(NROW(Quotes))),13]<-budget
shallBuy <- FALSE
}else{
if (!shallBuy){
index <- intersections[i]
price <- Quotes[index,2]
budget <-  Quotes[index,13] + price * Quotes[index,14]
papers <-  0
Quotes[(index:NROW(Quotes)),14]<-papers
Quotes[(index:NROW(Quotes)),13]<-budget
shallBuy <- TRUE
}
}
}
legend("topleft", c("EMA-S", "EMA-L"), col=c("red", "orange"), lwd=2)
